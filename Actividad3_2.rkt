
;(lexerAritmetico "ejemplo.txt" "salida.txt")

(define (imprime lista p2)
  (define (despliega lista p2)
    (display (first lista) p2)
    (display "" p2)
    (display (second lista) p2)
    (newline p2)
    1)
  (if (empty? lista)
      0
      (if (> (length (car lista)) 2) 
          (+ (imprime (car lista) p2) (imprime (cdr lista) p2))
          (+ (despliega (car lista) p2) (imprime (cdr lista) p2)))))

(define (checkChar atomo p1)
  (if (number? atomo)
      (checkReals atomo p1)
      (checkOperators atomo p1)))

(define (checkReals atomo p1)
  (if (integer? atomo)
      (list "ENTERO: " atomo)
      (list "FLOAT: " atomo)))

(define (checkOperators atomo p1)
  (if (equal? atomo '=)
      (list "ASIGNACION: " atomo)
      (if (equal? atomo '+)
          (list "SUMA: " atomo)
          (if (equal? atomo '-)
              (list "RESTA: " atomo)
              (if (equal? atomo '*)
                  (list "MULTIPLICACION: " atomo)
                  (if (equal? atomo '/)
                      (list "DIVISION: " atomo)
                      (if (equal? atomo '^)
                          (list "POTENCIA: " atomo)
                          (checkVariables atomo p1))))))))

(define (checkVariables atomo p1)
  (if (list? atomo)
      (checkList0 atomo p1)
      (if (equal? atomo '//)
          (append (list "COMENTARIO: //") (checkComment atomo p1))
          (list "VARIABLE: " atomo))))

(define (checkComment atomo p1)
  (list (read-line p1)))

(define (checkList0 atomo p1)
  (cons (list "PARENTESIS INICIAL: " "(") (checkList atomo p1)))

(define (checkList lista p1)
  (if (empty? lista)
      (list (list "PARENTESIS FINAL: " ")"))
      (append (list (checkChar (car lista) p1)) (checkList (cdr lista) p1))))

(define (recorre p1)
  (if (eof-object? (peek-char p1))
      '()
      (append (list(checkChar (read p1) p1)) (recorre p1))))

(define (lexerAritmetico file1 file2)
  (define p1 (open-input-file file1))
  (define p2 (open-output-file file2))
  (define lista (recorre p1))
  (display lista)
  (define cantidad (imprime lista p2))
  (display "CANTIDAD DE TOKENS: " p2)
  (display cantidad p2)
  (close-output-port p2)
  (close-input-port p1)
  )